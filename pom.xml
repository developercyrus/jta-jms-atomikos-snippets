<project 
        xmlns="http://maven.apache.org/POM/4.0.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- 
        Comment:
        1.  it's harder to use postgresql than mysql, more troubleshooting
        2.  it's hard to debug XA. "-1 .. raised" if Account.getBalance() immediately called without XA commit after Account..withdraw()
        3.  don't know there's web console for activemq until this project. the web server behind is using jetty
  
        Remarks:
        1.  example2 uses javax.transaction.UserTransaction, to serve the following user case    
            i) same JVM, transfer N amount from saving account in bank A to bank B, for the same client
            ii) in bank A, withdraw N amount from saving account (in terms of datasource A)
            iii) in bank A, inform bank B, to deposit N amount (withdraw -N amount) for saving account, from Bank A to Bank B (in terms of jms A to B)
            iv) commit both, either fail will rollback
        2.  started version 5.8, maven-activemq-plugin is renamed to activemq-maven-plugin
        3.  activemq web console is based on jetty, 
            i) admin,       http://localhost:8161/admin, with account: admin / admin
            ii) hawtio,     http://localhost:8161/hawtio, it's a pluggable HTML5 dashboard
        6.  launch apache-activemq-5.11-SNAPSHOT by "activemq.bat start"    
        7.  launch apache-activemq-5.9-SNAPSHOT by "activemq.bat"
        8.  activemq 5.11.1 uses "org.eclipse.jetty.server.nio.SelectChannelConnector" which comes from jetty 8.1.0.v20120127 (last version having with it)    
        9.  run "mvn activemq:run" will use the default value "tcp://localhost:61616)?useJmx=false&persistent=false" 
            (obtained from reverse engineering, activemq-maven-plugin-5.11.1.jar\META-INF\maven\plugin.xml)
        10. plan to use activemq-maven-plugin to automate all the lifecycle, but rollback testing requires to check if the message is stored in activemq (expected not)
            the verification can be manually done by login to activemq web console.
        11. started from activemq 5.8, the LevelDB Store is a file based persistence database. It has been optimized to provide even faster persistence than KahaDB. 
            reference: http://activemq.apache.org/persistence.html

        
        Environment:
        1.  Windows 7 64 bit (assume OS installed in C:\Windows)
        2.  Eclipse 4.4
        3.  JDK 8.0
        4.  zwamp-1.1.2 (mysql) 
        5.  postgresql 9.4.1-3  
                require to set max_prepared_transactions to a nonzero value in postgresql-9.4.1-3\pgsql\data\postgresql.conf                
                otherwise Caused by: org.postgresql.util.PSQLException: ERROR: prepared transactions are disabled               
                https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server
                
        
        Approach
        1.  step:   
            i)  manully launch apache-activemq-5.9-SNAPSHOT 
            ii) clean the queue if exist
            iii)run "mvn integration-test" (twice, the first will hit error "[ERROR] Failed to execute 
                goal org.apache.maven.plugins:maven-resources-plugin:2.6:resources (default-resources) 
                on project jta-jms-atomikos-snippets: The process cannot access the file because another 
                process has locked a portion of the file -> [Help 1]")
                -initialize 2 datasources
                -execute integration test 
            iv)go to http://localhost:8161/admin to check if there's only one queue and one message stored (expected as is)
                there are 3 columns should be aware 
                -Number Of Pending Messages = number of messages CURRENTLY waiting for delivery in the destination (the current size of the queue)
                -Messages Enqueued = number of messages that where enqueued in the destination since the last statistic reset. This number can only rise.
                -Messages Dequeued = messages delivered from the destination to consumers. this number can be higher that the number of enqueued messages if a message was delivered to multiple consumers (topics).
            v) manually stop activemq by CTRL-C              
        2.  this project includes integration test 
        3.  with maven-failsafe-plugin, any java file name with "IT" will be treated as 
            intergration test (by maven, the phase is integration-test). 
        4.  the integration test report can be found in \target\failsafe-reports
       
    -->
        
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
        <activemq.version>5.11.1</activemq.version>
        <jetty.version>8.1.0.v20120127</jetty.version>  
    </properties>
    

    <modelVersion>4.0.0</modelVersion>
    <groupId>jta-jms-atomikos-snippets</groupId>
    <artifactId>jta-jms-atomikos-snippets</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    
    <build>   
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>                                   
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>sql-maven-plugin</artifactId>
                                        <versionRange>[1.5,)</versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    
                                    <action>
                                        <execute>  
                                            <runOnIncremental>false</runOnIncremental>  
                                        </execute>  
                                    </action>
                                </pluginExecution>                                                                 
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    
        <plugins>   
            
            <!-- initialize -->            
            

            <!-- compile -->                  
            <plugin>                                   
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>     <!-- align with javax 7.0 -->
                    <target>1.7</target>
                </configuration>                         
            </plugin>  
                       
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.9</version>
                    </dependency>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901.jdbc4</version>
                    </dependency>
                </dependencies>
                
                <executions>
                    <execution>
                        <id>drop-db-before-test-if-any (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                
                                drop database if exists javaee_jta_jms_atomikos_example2;                                                        
                            </sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                    
                    <execution>
                        <id>drop-db-before-test-if-any (postgresql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                
                                drop database if exists javaee_jta_jms_atomikos_example2;                      
                            </sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>


                    <execution>
                        <id>create-db (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                        
                                create database javaee_jta_jms_atomikos_example2;                                                 
                            </sqlCommand>
                        </configuration>
                    </execution>
                                                          
                    <execution>
                        <id>create-db (postgresql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                
                                create database javaee_jta_jms_atomikos_example2;                         
                            </sqlCommand>
                        </configuration>
                    </execution>              
                  
                  
                    <execution>
                        <id>create-schema (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/javaee/jta/jms/atomikos/example2/mysql/create-schema.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    
                    
                    <execution>
                        <id>create-schema (postgresql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432/javaee_jta_jms_atomikos_example2</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/javaee/jta/jms/atomikos/example2/postgresql/create-schema.sql</srcFile>                                
                            </srcFiles>
                        </configuration>
                    </execution>
                   
                   
                    <execution>
                        <id>create-data (mysql)</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <autocommit>true</autocommit>
                            <srcFiles>                                            
                                <srcFile>src/test/resources/javaee/jta/jms/atomikos/example2/mysql/insert-record.sql</srcFile>
                            </srcFiles>
                        </configuration>                                               
                    </execution>
                    
                    <execution>
                        <id>create-data (postgresql)</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432/javaee_jta_jms_atomikos_example2</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>                                            
                                <srcFile>src/test/resources/javaee/jta/jms/atomikos/example2/postgresql/insert-record.sql</srcFile>
                            </srcFiles>
                        </configuration>                                               
                    </execution>
                </executions>
            </plugin>
        
 
            <!-- integration-test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>    
    </build>     

    <dependencies>
           
        <!-- junit -->                
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
        
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.9</version>
        </dependency>
        
               
        <!-- postgresql -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
        </dependency>



        <!--  atomikos - jta implementation --> 
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jta</artifactId>
            <version>3.9.3</version>
        </dependency>
        

        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jdbc</artifactId>
            <version>3.9.3</version>
        </dependency>
        
        
        <!-- atomikos - jms transaction implementation, for AtomikosConnectionFactoryBean -->
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jms</artifactId>
            <version>3.9.3</version>
        </dependency>
        

        <!-- jms broker implementation --> 
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <version>${activemq.version}</version>
        </dependency>
        
        <!-- javax -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <!-- 
                1.  wihout scope = provided, it hits javax/transaction/SystemException
                        test1(javaee.jta.atkmikos.example1.ClientIT): Absent Code attribute in method that is not native or abstract in class file javax/transaction/SystemException
                2.  fix it 
                        a) by adding scope, 
                                https://aishwaryavaishno.wordpress.com/tag/javaxtransactionsystemexception/
                        b) by switch from 6.0 to 7.0, although the quote reference is from 6.0 to 6.0-5, 
                                http://stackoverflow.com/questions/15386950/classformaterror-absent-code-attribute-in-method-that-is-not-native-or-abstract 
             -->
            <version>7.0</version>            
            <scope>provided</scope>
        </dependency>
        
       
        
    </dependencies>             
</project>